coefs<-summ$p.coeff["SVI"]
coefs
#Estimate Confidence Intervals
cis<-confint(mod)
summ$se["SVI"]
se<-summ$se["SVI"]
coefs - 1.96*se
#Estimate Confidence Intervals
ll<-coefs - 1.96*se
ul<-coefs + 1.96*se
ac<-AIC(mod)
dv<-summ$deviance
names(summ)
summ$p.pv["SVI"]
summary(mod)
#Evaluate Single variable associations
names(moddata_sc)
exp.vars<-c(svi.dat)
exp.vars
summary(moddata_sc[,exp.vars])
mod.tab<-data.frame(VAR=0,BETA=0,SE=0, PVAL=0, LL=0, UL=0, AICM=0, DEV=0)
#Single Factor Models
for(i in 1:length(exp.vars)){
print(i)
SVI<-scale(moddata_sc[,exp.vars[i]], center=TRUE, scale=TRUE)
summary(SVI)
lab<-exp.vars[i]
lab
#Case Model
mod<-gam(log(sliccnorm+1) ~ racegp + gender + hs_grad + bl_age + te(X,Y)+ SVI, data=moddata_sc)
#Extract Summary Info
summ<-summary(mod)
names(summ)
#Get Coefficients
coefs<-summ$p.coeff["SVI"]
coefs
se<-summ$se["SVI"]
pval<-summ$p.pv["SVI"]
#Estimate Confidence Intervals
ll<-coefs - 1.96*se
ul<-coefs + 1.96*se
ac<-AIC(mod)
dv<-summ$deviance
#Construct Table
mod.tab[i,]<-c(VAR=lab, BETA=coefs, SE=se,PVAL=pval, LL=ll, UL=ul, AICM=ac, DEV=dv)
}
mod.tab
str(mod.tab)
mod.tab$BETA<-as.numeric(mod.tab$BETA)
mod.tab$SE<-as.numeric(mod.tab$SE)
mod.tab$zval<-as.numeric(mod.tab$zval)
mod.tab$LL<-as.numeric(mod.tab$LL)
mod.tab$UL<-as.numeric(mod.tab$UL)
mod.tab$AICM<-as.numeric(mod.tab$AICM)
mod.tab$DEV<-as.numeric(mod.tab$DEV)
str(mod.tab)
#Single Factor Models
for(i in 1:length(exp.vars)){
print(i)
SVI<-scale(moddata_sc[,exp.vars[i]], center=TRUE, scale=TRUE)
summary(SVI)
lab<-exp.vars[i]
lab
#Case Model
mod<-gam(log(sliccnorm+1) ~ racegp + gender + hs_grad + bl_age + te(X,Y)+ SVI, data=moddata_sc)
#Extract Summary Info
summ<-summary(mod)
names(summ)
#Get Coefficients
coefs<-summ$p.coeff["SVI"]
coefs
se<-summ$se["SVI"]
pval<-summ$p.pv["SVI"]
#Estimate Confidence Intervals
ll<-coefs - 1.96*se
ul<-coefs + 1.96*se
ac<-AIC(mod)
dv<-summ$deviance
#Construct Table
mod.tab[i,]<-c(VAR=lab, BETA=coefs, SE=se,PVAL=pval, LL=ll, UL=ul, AICM=ac, DEV=dv)
}
mod.tab<-data.frame(VAR=0,BETA=0,SE=0, PVAL=0, LL=0, UL=0, AICM=0, DEV=0)
#Single Factor Models
for(i in 1:length(exp.vars)){
print(i)
SVI<-scale(moddata_sc[,exp.vars[i]], center=TRUE, scale=TRUE)
summary(SVI)
lab<-exp.vars[i]
lab
#Case Model
mod<-gam(log(sliccnorm+1) ~ racegp + gender + hs_grad + bl_age + te(X,Y)+ SVI, data=moddata_sc)
#Extract Summary Info
summ<-summary(mod)
names(summ)
#Get Coefficients
coefs<-summ$p.coeff["SVI"]
coefs
se<-summ$se["SVI"]
pval<-summ$p.pv["SVI"]
#Estimate Confidence Intervals
ll<-coefs - 1.96*se
ul<-coefs + 1.96*se
ac<-AIC(mod)
dv<-summ$deviance
#Construct Table
mod.tab[i,]<-c(VAR=lab, BETA=coefs, SE=se,PVAL=pval, LL=ll, UL=ul, AICM=ac, DEV=dv)
}
summ$deviance
names(summ)
AIC(mod)
#Evaluate Single variable associations
names(moddata_sc)
exp.vars<-c(svi.dat)
exp.vars
summary(moddata_sc[,exp.vars])
mod.tab<-data.frame(VAR=0,BETA=0,SE=0, PVAL=0, LL=0, UL=0, AICM=0)
#Single Factor Models
for(i in 1:length(exp.vars)){
print(i)
SVI<-scale(moddata_sc[,exp.vars[i]], center=TRUE, scale=TRUE)
summary(SVI)
lab<-exp.vars[i]
lab
#Case Model
mod<-gam(log(sliccnorm+1) ~ racegp + gender + hs_grad + bl_age + te(X,Y)+ SVI, data=moddata_sc)
#Extract Summary Info
summ<-summary(mod)
names(summ)
#Get Coefficients
coefs<-summ$p.coeff["SVI"]
coefs
se<-summ$se["SVI"]
pval<-summ$p.pv["SVI"]
#Estimate Confidence Intervals
ll<-coefs - 1.96*se
ul<-coefs + 1.96*se
ac<-AIC(mod)
#Construct Table
mod.tab[i,]<-c(VAR=lab, BETA=coefs, SE=se, PVAL=pval, LL=ll, UL=ul, AICM=ac)
}
mod.tab
str(mod.tab)
mod.tab$BETA<-as.numeric(mod.tab$BETA)
mod.tab$SE<-as.numeric(mod.tab$SE)
mod.tab$LL<-as.numeric(mod.tab$LL)
mod.tab$UL<-as.numeric(mod.tab$UL)
mod.tab$AICM<-as.numeric(mod.tab$AICM)
mod.tab$DEV<-as.numeric(mod.tab$DEV)
str(mod.tab)
str(mod.tab)
#Plot single variable associations
exp.vars
colormod<-c(heat.colors(5), terrain.colors(4), grey.colors(4), cm.colors(2), topo.colors(5))
colormod
#Beta Estimates with 95% Confidence Intervals
par(mfrow=c(1,1), pty="m", mar=c(5,4,2,2), family='serif')
plot(mod.tab$BETA, col=colormod,
pch=19, ylab="Beta (95% CI)",
main ="NWAS Associations with Normalized SLICC in SC (n=351)", axes=FALSE, cex=2, xlab="",
ylim = c(min(mod.tab$LL), max(mod.tab$UL))
)
axis(side=2, tick=seq(min(mod.tab$LL),  max(mod.tab$UL), 20))
axis(side=1, at=1:length(mod.tab$VAR), labels=FALSE, cex.axis=0.5)
text(x=seq(1, length(mod.tab$VAR), by=1), y=min(mod.tab$BETA)-.04,labels = mod.tab$VAR, cex=0.65,
srt = 45, pos = 1, xpd = TRUE, offset=0)
arrows(x0=1:length(mod.tab$VAR), x1=1:length(mod.tab$VAR),
y0=mod.tab$LL, y1=mod.tab$UL,
length=0, code=3, col="darkgrey")
abline(h=0, col="darkred", lwd=2)
box()
#ECM Model
slicc.gam<-gam(log(sliccnorm+1)~ racegp + gender + hs_grad + bl_age
+ te(X,Y) + te(U,V, k=4), data=moddat)
summary(slicc.gam)
anova(slicc.gam)
plot(slicc.gam)
ticktype="detailed", theta=30, phi=45, expand=0.85,
zlab="SLICC", xlab="U-Coordinate", ylab="V-Coordinate")
vis.gam(slicc.gam, view=c("U", "V"), color="topo", type="link",
ticktype="detailed", theta=30, phi=45, expand=0.85,
zlab="SLICC", xlab="U-Coordinate", ylab="V-Coordinate")
moddata_sc_aa<-subset(moddata_sc, racegp==2)
dim(moddata_sc_aa)
exp.vars<-c(svi.dat)
exp.vars
summary(moddata_sc_aa[,exp.vars])
mod.tab<-data.frame(VAR=0,BETA=0,SE=0, PVAL=0, LL=0, UL=0, AICM=0)
#Single Factor Models
for(i in 1:length(exp.vars)){
print(i)
SVI<-scale(moddata_sc_aa[,exp.vars[i]], center=TRUE, scale=TRUE)
summary(SVI)
lab<-exp.vars[i]
lab
#Case Model
mod<-gam(log(sliccnorm+1) ~ gender + hs_grad + bl_age + te(X,Y)+ SVI, data=moddata_sc_aa)
#Extract Summary Info
summ<-summary(mod)
names(summ)
#Get Coefficients
coefs<-summ$p.coeff["SVI"]
coefs
se<-summ$se["SVI"]
pval<-summ$p.pv["SVI"]
#Estimate Confidence Intervals
ll<-coefs - 1.96*se
ul<-coefs + 1.96*se
ac<-AIC(mod)
#Construct Table
mod.tab[i,]<-c(VAR=lab, BETA=coefs, SE=se, PVAL=pval, LL=ll, UL=ul, AICM=ac)
}
mod.tab
str(mod.tab)
mod.tab$BETA<-as.numeric(mod.tab$BETA)
mod.tab$SE<-as.numeric(mod.tab$SE)
mod.tab$LL<-as.numeric(mod.tab$LL)
mod.tab$UL<-as.numeric(mod.tab$UL)
mod.tab$AICM<-as.numeric(mod.tab$AICM)
str(mod.tab)
#Plot single variable associations
exp.vars
colormod<-c(heat.colors(5), terrain.colors(4), grey.colors(4), cm.colors(2), topo.colors(5))
colormod
#Beta Estimates with 95% Confidence Intervals
par(mfrow=c(1,1), pty="m", mar=c(5,4,2,2), family='serif')
#Beta Estimates with 95% Confidence Intervals
par(mfrow=c(1,1), pty="m", mar=c(5,4,2,2), family='serif')
plot(mod.tab$BETA, col=colormod,
pch=19, ylab="Beta (95% CI)",
main ="NWAS Associations with Normalized SLICC in SC AA (n=351)", axes=FALSE, cex=2, xlab="",
ylim = c(min(mod.tab$LL), max(mod.tab$UL))
)
axis(side=2, tick=seq(min(mod.tab$LL),  max(mod.tab$UL), 20))
axis(side=1, at=1:length(mod.tab$VAR), labels=FALSE, cex.axis=0.5)
text(x=seq(1, length(mod.tab$VAR), by=1), y=min(mod.tab$BETA)-.04,labels = mod.tab$VAR, cex=0.65,
srt = 45, pos = 1, xpd = TRUE, offset=0)
arrows(x0=1:length(mod.tab$VAR), x1=1:length(mod.tab$VAR),
y0=mod.tab$LL, y1=mod.tab$UL,
length=0, code=3, col="darkgrey")
abline(h=0, col="darkred", lwd=2)
box()
##############################################################################
#Explore with SOM
#Prep data
names(moddata_sc_aa)
moddata_full<-na.omit(moddata_sc_aa[,c("sliccnorm", "bl_age", "racegp", "gender", "hs_grad",
"X", "Y", "Region", "FIPS","RPL_THEMES", "RPL_THEME1",
"RPL_THEME2", "RPL_THEME3", "RPL_THEME4", svi.vars)])
str(moddata_full)
dim(table(as.factor(moddata_full$FIPS)))
#Beta Estimates with 95% Confidence Intervals
par(mfrow=c(1,1), pty="m", mar=c(5,4,2,2), family='serif')
plot(mod.tab$BETA, col=colormod,
pch=19, ylab="Beta (95% CI)",
main ="NWAS Associations with Normalized SLICC in SC AA (n=275)", axes=FALSE, cex=2, xlab="",
ylim = c(min(mod.tab$LL), max(mod.tab$UL))
)
axis(side=2, tick=seq(min(mod.tab$LL),  max(mod.tab$UL), 20))
axis(side=1, at=1:length(mod.tab$VAR), labels=FALSE, cex.axis=0.5)
text(x=seq(1, length(mod.tab$VAR), by=1), y=min(mod.tab$BETA)-.04,labels = mod.tab$VAR, cex=0.65,
srt = 45, pos = 1, xpd = TRUE, offset=0)
arrows(x0=1:length(mod.tab$VAR), x1=1:length(mod.tab$VAR),
y0=mod.tab$LL, y1=mod.tab$UL,
length=0, code=3, col="darkgrey")
abline(h=0, col="darkred", lwd=2)
box()
str(moddata_full)
dim(table(as.factor(moddata_full$FIPS)))
Y<-data.frame(Y=moddata_full$sliccnorm)
X<-moddata_full[,svi.vars]
X1<-scale(X)
Z<-data.matrix(moddata_full[,c("racegp", "gender", "hs_grad", "bl_age")])
str(Z)
head(Z)
cbind(Y,Z)
colormod2<-c(terrain.colors(4), grey.colors(4), cm.colors(2), topo.colors(5))
colormod2
ms<-map_size(trn_dat=X1, kmn=2, kmx=30)
ms
mi<-map_inits(trn_dat=X1, xdim=5, ydim=4, nstarts=5)
mi$opt_init
svi_map<-map_ecm(X1, xdim=5, ydim=4, maptopo="hexagonal", inits=mi$opt_init)
map_plot(svi_map, addFreq = TRUE, colormod=colormod2)
mapmet<-map_metric(svi_map)
head(mapmet)
moddata_full$OBS<-rownames(moddata_full)
moddat<-merge(moddata_full, mapmet, by="OBS")
head(moddat)
smap<-aggregate(moddat$sliccnorm, by=list(moddat$NODE), FUN=mean)
plot(svi_map, type="property", property=smap$x, main="Normalized SLICC")
par(mfrow=c(1,1), mar=c(5,4,2,2))
#ECM Model
slicc.gam<-gam(log(sliccnorm+1)~ racegp + gender + hs_grad + bl_age
+ te(X,Y) + te(U,V, k=4), data=moddat)
#ECM Model
slicc.gam<-gam(log(sliccnorm+1)~ gender + hs_grad + bl_age
+ te(X,Y) + te(U,V, k=4), data=moddat)
summary(slicc.gam)
anova(slicc.gam)
plot(slicc.gam)
ticktype="detailed", theta=30, phi=45, expand=0.85,
zlab="SLICC", xlab="U-Coordinate", ylab="V-Coordinate")
title(main="Joint Dose-Response Function")
box(which="figure")
vis.gam(slicc.gam, view=c("U", "V"), color="topo", type="link",
ticktype="detailed", theta=30, phi=45, expand=0.85,
zlab="SLICC", xlab="U-Coordinate", ylab="V-Coordinate")
title(main="Joint Dose-Response Function")
box(which="figure")
#Beta Estimates with 95% Confidence Intervals
par(mfrow=c(1,1), pty="m", mar=c(5,4,2,2), family='serif', cex=1.5)
plot(mod.tab$BETA, col=colormod,
pch=19, ylab="Beta (95% CI)",
main ="NWAS Associations with Normalized SLICC in SC AA (n=275)", axes=FALSE, cex=2, xlab="",
ylim = c(min(mod.tab$LL), max(mod.tab$UL))
)
axis(side=2, tick=seq(min(mod.tab$LL),  max(mod.tab$UL), 20))
axis(side=1, at=1:length(mod.tab$VAR), labels=FALSE, cex.axis=0.5)
text(x=seq(1, length(mod.tab$VAR), by=1), y=min(mod.tab$BETA)-.04,labels = mod.tab$VAR, cex=0.65,
srt = 45, pos = 1, xpd = TRUE, offset=0)
arrows(x0=1:length(mod.tab$VAR), x1=1:length(mod.tab$VAR),
y0=mod.tab$LL, y1=mod.tab$UL,
length=0, code=3, col="darkgrey")
abline(h=0, col="darkred", lwd=2)
box()
text(x=seq(1, length(mod.tab$VAR), by=1), y=min(mod.tab$BETA)-.06,labels = mod.tab$VAR, cex=0.65,
srt = 45, pos = 1, xpd = TRUE, offset=0)
text(x=seq(1, length(mod.tab$VAR), by=1), y=min(mod.tab$BETA)-.05,labels = mod.tab$VAR, cex=0.65,
srt = 45, pos = 1, xpd = TRUE, offset=0)
#Beta Estimates with 95% Confidence Intervals
par(mfrow=c(1,1), pty="m", mar=c(5,4,2,2), family='serif', cex=1.5)
plot(mod.tab$BETA, col=colormod,
pch=19, ylab="Beta (95% CI)",
main ="NWAS Associations with Normalized SLICC in SC AA (n=275)", axes=FALSE, cex=2, xlab="",
ylim = c(min(mod.tab$LL), max(mod.tab$UL))
)
axis(side=2, tick=seq(min(mod.tab$LL),  max(mod.tab$UL), 20))
axis(side=1, at=1:length(mod.tab$VAR), labels=FALSE, cex.axis=0.5)
text(x=seq(1, length(mod.tab$VAR), by=1), y=min(mod.tab$BETA)-.05,labels = mod.tab$VAR, cex=0.65,
srt = 45, pos = 1, xpd = TRUE, offset=0)
arrows(x0=1:length(mod.tab$VAR), x1=1:length(mod.tab$VAR),
y0=mod.tab$LL, y1=mod.tab$UL,
length=0, code=3, col="darkgrey")
abline(h=0, col="darkred", lwd=2)
box()
#Beta Estimates with 95% Confidence Intervals
par(mfrow=c(1,1), pty="m", mar=c(5,4,2,2), family='serif', cex=1.5)
plot(mod.tab$BETA, col=colormod,
pch=19, ylab="Beta (95% CI)",
main ="NWAS Associations with Normalized SLICC in SC AA (n=275)", axes=FALSE, cex=2, xlab="",
ylim = c(min(mod.tab$LL), max(mod.tab$UL))
)
axis(side=2, tick=seq(min(mod.tab$LL),  max(mod.tab$UL), 20))
axis(side=1, at=1:length(mod.tab$VAR), labels=FALSE, cex.axis=0.5)
text(x=seq(1, length(mod.tab$VAR), by=1), y=min(mod.tab$BETA)-.05,labels = mod.tab$VAR, cex=0.65,
srt = 90, pos = 1, xpd = TRUE, offset=0)
arrows(x0=1:length(mod.tab$VAR), x1=1:length(mod.tab$VAR),
y0=mod.tab$LL, y1=mod.tab$UL,
length=0, code=3, col="darkgrey")
abline(h=0, col="darkred", lwd=2)
box()
par(cex=1.5)
map_plot(svi_map, addFreq = TRUE, colormod=colormod2)
map_plot(svi_map, addFreq = TRUE, colormod=colormod2, cex=1.5)
plot(svi_map, type="property", property=smap$x, main="Normalized SLICC")
plot(svi_map, type="property", property=smap$x, main="Normalized SLICC", cex=1.5)
plot(svi_map, type="property", property=smap$x, main="Mean Normalized SLICC", cex=1.5)
par(cex=1.5)
vis.gam(slicc.gam, view=c("U", "V"), color="topo", type="link",
ticktype="detailed", theta=30, phi=45, expand=0.85,
zlab="SLICC", xlab="U-Coordinate", ylab="V-Coordinate")
smap
?c
#Check package
check()
library(devtools)
#Check package
check()
#Load Package
load_all()
data("dataset1")
data(dataset1)
summary(dataset1)
Y<-dataset1$Y
X<-dataset1[,3:9]
Z<-as.factor(dataset1$Z)
hist(Y)
X_sc<-scale(X, center=TRUE, scale=TRUE)
summary(X_sc)
#Specify custom colors to correspond with synthetic health associations. Red: exposure has positive association with outcome; Grey: exposure has no association; Blue: exposure has negative association with outcome.
cust_col<-c("darkred", "darkred", "darkgrey", "darkblue", "darkblue", "darkgrey", "darkred")
plot(1:7, col=cust_col, pch=19, cex=4)
map_size(X_sc, kmx=50)
#Load Package
load_all()
ms<-map_size(X_sc, kmx=30)
print(ms)
print(ms)
mi<-map_inits(trn_dat=X_sc, xdim=5, ydim=5, nstarts=5)
mi
init<-mi$opt_init
ecm<-map_ecm(trn_dat=X_sc,xdim=5, ydim=5, inits=init)
summary(ecm)
map_plot(map_obj=ecm, varnames=NULL, colormod=cust_col,
nodelab=TRUE, labtype="IDs", labsize=1,
addFreq=TRUE, freqtype="frq", freqsize=0.75,
legsymsize=2, leglabsize=1, legtxtlas=2)
map_plot(map_obj=ecm, varnames=NULL, colormod=cust_col,
nodelab=TRUE, labtype="IDs", labsize=1,
addFreq=TRUE, freqtype="frq", freqsize=0.75,
legsymsize=2, leglabsize=1, legtxtlas=2, legloc="right")
map_plot(map_obj=ecm, varnames=NULL, colormod=cust_col,
nodelab=TRUE, labtype="IDs", labsize=1,
addFreq=TRUE, freqtype="frq", freqsize=0.75,
legsymsize=2, leglabsize=1, legtxtlas=2, legloc="right")
mm<-map_metric(ecm)
head(mm)
#Load Package
load_all()
mm<-map_metric(ecm)
head(mm)
mm<-map_metric(ecm)
head(mm)
#Load Package
load_all()
mm<-map_metric(ecm)
head(mm)
moddata<-merge(dataset1, mm, by="OBS")
head(moddata)
?gam
#Load Package
load_all()
mapgam<-map_gam(mod_dat=moddata, Y="Y", Z="Z")
#Load Package
load_all()
moddata<-merge(dataset1, mm, by="OBS")
head(moddata)
mapgam<-map_gam(mod_dat=moddata, Y="Y", Z="Z")
moddata<-merge(dataset1, mm, by="OBS")
head(moddata)
mapgam<-map_gam(mod_dat=moddata, Y=Y, Z=Z)
mapgam<-mgcv::gam(Y ~ Z + te(U,V), data=moddata)
summary(mapgam)
map_plot(map_obj=ecm, varnames=NULL, colormod=cust_col,
nodelab=TRUE, labtype="IDs", labsize=1,
addFreq=TRUE, freqtype="frq", freqsize=0.75,
legsymsize=2, leglabsize=1, legtxtlas=2, legloc="bottom")
ms<-map_size(X_sc, kmx=10)
print(ms)
?visgam
?vis.gam
mgcv::vis.gam(x=mapgam, view=c("U", "V"))
mgcv::vis.gam(x=mapgam, view=c("U", "V"))
#Plot GAM results
mgcv::vis.gam(mapgam, view=c("U", "V"), color="topo", type="link",
ticktype="detailed", theta=30, phi=45, expand=0.85,
zlab="Y", xlab="U-Coordinate", ylab="V-Coordinate")
graphics::title(main=" ECM Joint Dose-Response Function")
graphics::box(which="figure")
mapgam<-mgcv::gam(Y ~ Z + te(U,V), data=moddata)
summary(mapgam)
#Plot GAM results
mgcv::vis.gam(mapgam, view=c("U", "V"), color="topo", type="link",
ticktype="detailed", theta=30, phi=45, expand=0.85,
zlab="Y", xlab="U-Coordinate", ylab="V-Coordinate")
title(main=" ECM Joint Dose-Response Function")
box(which="figure")
#Plot GAM results
mgcv::vis.gam(mapgam, view=c("U", "V"), color="heat", type="link",
ticktype="detailed", theta=30, phi=45, expand=0.85,
zlab="Y", xlab="U-Coordinate", ylab="V-Coordinate")
title(main=" ECM Joint Dose-Response Function")
document()
usethis::use_data(dataset1)
usethis::use_data(dataset1, overwrite=TRUE)
document()
#Check package
check()
usethis::use_vignette("ECM_GAM")
#library(ECM)
devtools::load_all()
#Plot GAM results
mgcv::vis.gam(mapgam, view=c("U", "V"), color="heat", type="link",
ticktype="detailed", theta=30, phi=45, expand=0.85,
zlab="Y", xlab="U-Coordinate", ylab="V-Coordinate")
title(main=" ECM Joint Dose-Response Function")
?aweSOM::somInit
?aweSOM::somQuality
#Plot GAM results
mgcv::vis.gam(mapgam, view=c("U", "V"), color="heat", type="link",
ticktype="detailed", theta=30, phi=45, expand=0.85,
zlab="Y", xlab="U-Coordinate", ylab="V-Coordinate")
title(main=" ECM Joint Dose-Response Function")
map_plot(map_obj=ecm, varnames=NULL, colormod=cust_col,
nodelab=TRUE, labtype="IDs", labsize=1,
addFreq=TRUE, freqtype="frq", freqsize=0.75,
legsymsize=2, leglabsize=1, legtxtlas=2, legloc="bottom")
#Check package
check()
#Check package
check()
document()
document()
#Check package
check()
#Check package
check()
#Check package
check()
document()
#Check package
check()
